apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-config
  labels:
    {{- include "chart.labels" . | nindent 4 }}
stringData:
  "platform.json": |
    {
      "broker": {
        "enable": true,
        "tlsPort": 1337,
        "sshPort": 2222,
        "powDifficulty": {{ .Values.api.config.powDifficulty }},
        "tlsKeyPath": "/cert/tls.key",
        "tlsCertPath": "/cert/tls.crt",
        "challengeDomain": "{{ .Values.challenges.domain }}",
        "sessionNamespace": "{{ .Values.challenges.namespace }}",
        "containerRegistry": "{{ .Values.challenges.registry }}",
        "registryCredSecretName": "{{ .Values.challenges.registryCredentialName }}",
        "networkPolicies": {{ toJson .Values.challenges.networkPolicies.available }},
        "requiredNetworkPolicies": {{ toJson .Values.challenges.networkPolicies.required }}
      },
      "etcdEndpoints": [
        "http://{{ .Release.Name }}-etcd:2379"
      ],
      "authMethods": [
        {{ if .Values.auth.discord.enabled }}
        "discord"
        {{ end }}
      ],
      {{ if .Values.auth.discord.enabled }}
      "discord": {
        "id": {{ .Values.auth.discord.clientId | quote }},
        "secret": {{ .Values.auth.discord.clientSecret | quote }},
        "redirectUri": "{{ .Values.frontend.config.url }}/oauth/discord",
        "admins": {{ toJson .Values.auth.discord.admins }}
      },
      {{ end }}
      "grpcAddr": "0.0.0.0:8080"
    }
  "web.json": |
    {
      "api_url": {{ .Values.api.config.url | quote }},
      "static_file_url": {{ .Values.staticFiles.config.url | quote }},
      "auth_methods": [
        {{ if .Values.auth.discord.enabled }}
        {
          "provider": "discord",
          "id": {{ .Values.auth.discord.clientId | quote }},
          "redirect_uri": "{{ .Values.frontend.config.url }}/oauth/discord"
        }
        {{ end }}
      ]
    }
